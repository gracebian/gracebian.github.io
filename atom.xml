<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>grace_bian blog</title>
  <subtitle>It’s not about how badly you want something. It’s about what you are capable of!</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://github.com/gracebian/gracebian.github.io/"/>
  <updated>2017-08-22T13:19:07.778Z</updated>
  <id>http://github.com/gracebian/gracebian.github.io/</id>
  
  <author>
    <name>grace_bian</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>vue-cli脚手架</title>
    <link href="http://github.com/gracebian/gracebian.github.io/2017/08/22/vue-cli%E8%84%9A%E6%89%8B%E6%9E%B6/"/>
    <id>http://github.com/gracebian/gracebian.github.io/2017/08/22/vue-cli脚手架/</id>
    <published>2017-08-22T12:47:10.000Z</published>
    <updated>2017-08-22T13:19:07.778Z</updated>
    
    <content type="html"><![CDATA[<h1 id="vue-cli"><a href="#vue-cli" class="headerlink" title="vue-cli"></a>vue-cli</h1><p>vue提供的一个vue项目的创建和初始化工具 - 通常我们称他为：脚手架</p>
<h1 id="安装步骤："><a href="#安装步骤：" class="headerlink" title="安装步骤："></a>安装步骤：</h1><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><a href="https://github.com/vuejs/vue-cli">https://github.com/vuejs/vue-cli</a><br>(全局安装vue-cli）<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install -g vue-cli</div></pre></td></tr></table></figure></p>
<p>安装好vue-cli以后，那么在系统中就会有一个全局的命令：vue</p>
<a id="more"></a>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>vue init <template-name> <project-name></project-name></template-name></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">vue init webpack  name(文件名)</div></pre></td></tr></table></figure>
<p>意思：创建一个基于webpack模板的vue新项目<br>template-name : 构建vue项目所使用的项目结构模板，项目所使用的构建风格，风格有很多，常用：webpack，webpack-simple<br>更多的风格：<a href="https://github.com/vuejs-templates">https://github.com/vuejs-templates</a><br>project-name : 当前需要构建的项目的名称 </p>
<p>通过vue-cli创建项目的时候，会提示：</p>
<ol>
<li>输入项目名称</li>
<li>输入项目简介</li>
<li>输入项目作者信息</li>
<li>项目开发和构建模式：直接enter</li>
<li>是否安装vue-router</li>
<li>是否启用ESLint语法检测工具，检测我们js代码是否符合规范（暂时no）</li>
<li>是否安装启用单元测试工具（Mocha）</li>
<li>是否安装e2e（端对端）的测试工具  </li>
</ol>
<h2 id="进入当前文件夹"><a href="#进入当前文件夹" class="headerlink" title="进入当前文件夹"></a>进入当前文件夹</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">cd</span>  name(文件名)</div></pre></td></tr></table></figure>
<h2 id="安装依赖包"><a href="#安装依赖包" class="headerlink" title="安装依赖包"></a>安装依赖包</h2><p>当我们使用vue-cli初始化一个项目以后，一些配置文件是被创建好了的，但是依赖的模块是没有安装的，我们需要通过npm i来安装</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install</div></pre></td></tr></table></figure>
<h2 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm run dev</div></pre></td></tr></table></figure>
<h1 id="项目文件的解读"><a href="#项目文件的解读" class="headerlink" title="项目文件的解读"></a>项目文件的解读</h1><ul>
<li>bulid和config是 webpck配置相关</li>
<li>node_modules文件夹：是npm install安装的依赖代码库</li>
<li>src文件夹：存放源码</li>
<li>static：存放第三方静态资源的，static里面的.gitkeep，如果为空，也可以提交到gitHub上面，正常情况下，是不可以提交的。</li>
<li>.babelrc:把es6文件编译成es5</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;vue-cli&quot;&gt;&lt;a href=&quot;#vue-cli&quot; class=&quot;headerlink&quot; title=&quot;vue-cli&quot;&gt;&lt;/a&gt;vue-cli&lt;/h1&gt;&lt;p&gt;vue提供的一个vue项目的创建和初始化工具 - 通常我们称他为：脚手架&lt;/p&gt;
&lt;h1 id=&quot;安装步骤：&quot;&gt;&lt;a href=&quot;#安装步骤：&quot; class=&quot;headerlink&quot; title=&quot;安装步骤：&quot;&gt;&lt;/a&gt;安装步骤：&lt;/h1&gt;&lt;h2 id=&quot;安装&quot;&gt;&lt;a href=&quot;#安装&quot; class=&quot;headerlink&quot; title=&quot;安装&quot;&gt;&lt;/a&gt;安装&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/vuejs/vue-cli&quot;&gt;https://github.com/vuejs/vue-cli&lt;/a&gt;&lt;br&gt;(全局安装vue-cli）&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;npm install -g vue-cli&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;安装好vue-cli以后，那么在系统中就会有一个全局的命令：vue&lt;/p&gt;
    
    </summary>
    
    
      <category term="Vue" scheme="http://github.com/gracebian/gracebian.github.io/tags/Vue/"/>
    
  </entry>
  
  <entry>
    <title>github + hexo 搭建博客</title>
    <link href="http://github.com/gracebian/gracebian.github.io/2017/08/05/github-hexo-%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/"/>
    <id>http://github.com/gracebian/gracebian.github.io/2017/08/05/github-hexo-搭建博客/</id>
    <published>2017-08-05T12:02:28.000Z</published>
    <updated>2017-08-22T12:22:58.610Z</updated>
    
    <content type="html"><![CDATA[<p>因为自己在搭建博客时有遇到难题，所以在这还是记录下搭建博客的过程，与此同时自己也参照网上的教程来再次学习下。<br>大致分为以下几个步骤：<br>1、配置环境<br>2、安装hexo<br>3、创建Github<br>4、配置SSH Key<br>5、配置GitHub</p>
<a id="more"></a>
<h2 id="配置环境"><a href="#配置环境" class="headerlink" title="配置环境"></a>配置环境</h2><p>1、注册一个GitHub账号<br>2、安装node.js、npm或者yarn<br>3、安装Git客户端（这是Windows）</p>
<h2 id="安装hexo"><a href="#安装hexo" class="headerlink" title="安装hexo"></a>安装hexo</h2><p>1、Node.js安装完成后,在电脑任意位置,右键,选择 GitBash ,执行以下命令<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">sudo npm install -g hexo</div><div class="line">or</div><div class="line">yarn global add hexo</div></pre></td></tr></table></figure></p>
<p>2、在本地创建一个文件夹，存放hexo的配置文件，我文件夹的名字是直接用的GitHub的仓库名gracebian.github.io，这样以便记忆。<br>3、在上面创建的文件夹，右键选择Git Bush Here,初始化命令：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo init</div></pre></td></tr></table></figure></p>
<p>4、生成静态页面：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo generate(简写hexo g)</div></pre></td></tr></table></figure></p>
<p>5、启动本地服务器，进行预览调试：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo sever (简写hexo s)</div></pre></td></tr></table></figure></p>
<p>6、浏览器输入<a href="http://localhost:4000" target="_blank" rel="external">http://localhost:4000</a></p>
<h2 id="创建GitHub"><a href="#创建GitHub" class="headerlink" title="创建GitHub"></a>创建GitHub</h2><p>1、创建一个repository(仓库)<br>2、在Repository name下填写yourname.github.io<br>注意：比如我的github名称是gracebian ,这里你就填 gracebian.github.io</p>
<h2 id="配置SSH-Key"><a href="#配置SSH-Key" class="headerlink" title="配置SSH Key"></a>配置SSH Key</h2><h3 id="一、设置Git的user-name和email："><a href="#一、设置Git的user-name和email：" class="headerlink" title="一、设置Git的user name和email："></a>一、设置Git的user name和email：</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ git config --global user.name <span class="string">"gracebian"</span></div><div class="line">$ git config --global user.email <span class="string">"grace_bian1@163.com"</span></div></pre></td></tr></table></figure>
<h3 id="二、生成SSH-Key"><a href="#二、生成SSH-Key" class="headerlink" title="二、生成SSH Key"></a>二、生成SSH Key</h3><p>1、查看是否已经有SSH Key:cd ~/.ssh<br>2、如果没有，就执行下面代码生成密钥：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ ssh-keygen -t rsa -C “grace_bian1@163.com”</div></pre></td></tr></table></figure></p>
<p>按3个回车，密码为空即可，生成的SSH key文件保存在中～/.ssh/id_rsa.pub<br>然后用文本编辑工具打开该文件，接着拷贝.ssh/id_rsa.pub文件内的所以内容，将它粘帖到github帐号管理中的添加SSH key界面中<br>3、打开github帐号管理中的添加SSH key界面的步骤如下：<br>a. 登录github<br>b. 点击右上方的Accounting settings图标<br>c. 选择 SSH key<br>d. 点击 Add SSH key<br>在出现的界面中填写SSH key的名称，填一个你自己喜欢的名称即可，然后将上面拷贝的~/.ssh/id_rsa.pub文件内容粘帖到key一栏，在点击“add key”按钮就可以了。<br>添加过程github会提示你输入一次你的github密码。</p>
<p>添加完成后再次执行git clone就可以成功克隆github上的代码库了。</p>
<h2 id="配置Github"><a href="#配置Github" class="headerlink" title="配置Github"></a>配置Github</h2><p>1、配置_config.yml文件，来建立关联，<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">deploy:</div><div class="line">     <span class="built_in">type</span>: git</div><div class="line">     repo: https://github.com/leopardpan/leopardpan.github.io.git</div><div class="line">     branch: master</div></pre></td></tr></table></figure></p>
<p>2、然后执行命令：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">npm install hexo-deployer-git --save</div><div class="line">or</div><div class="line">yarn add hexo-deployer-git</div></pre></td></tr></table></figure></p>
<p>3、部署<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo deploy（简写hexo d）</div></pre></td></tr></table></figure></p>
<p>4、然后再浏览器中输入github的账户<a href="http://gracebian.github.io" target="_blank" rel="external">http://gracebian.github.io</a><br>5、每次部署的步骤，可按以下三步来进行。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">hexo clean</div><div class="line">hexo generate</div><div class="line">hexo deploy</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;因为自己在搭建博客时有遇到难题，所以在这还是记录下搭建博客的过程，与此同时自己也参照网上的教程来再次学习下。&lt;br&gt;大致分为以下几个步骤：&lt;br&gt;1、配置环境&lt;br&gt;2、安装hexo&lt;br&gt;3、创建Github&lt;br&gt;4、配置SSH Key&lt;br&gt;5、配置GitHub&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>aaa</title>
    <link href="http://github.com/gracebian/gracebian.github.io/2017/08/02/aaa/"/>
    <id>http://github.com/gracebian/gracebian.github.io/2017/08/02/aaa/</id>
    <published>2017-08-02T14:27:45.000Z</published>
    <updated>2017-08-05T17:19:00.184Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
      <category term="标签" scheme="http://github.com/gracebian/gracebian.github.io/tags/%E6%A0%87%E7%AD%BE/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://github.com/gracebian/gracebian.github.io/2017/08/02/hello-world/"/>
    <id>http://github.com/gracebian/gracebian.github.io/2017/08/02/hello-world/</id>
    <published>2017-08-02T13:52:40.316Z</published>
    <updated>2017-08-02T13:52:40.316Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
    
    </summary>
    
    
  </entry>
  
</feed>
